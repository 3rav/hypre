C       
C       File:          Hypre_GMRES_Impl.f
C       Symbol:        Hypre.GMRES-v0.1.6
C       Symbol Type:   class
C       Babel Version: 0.8.0
C       SIDL Created:  20030210 16:05:50 PST
C       Generated:     20030210 16:05:54 PST
C       Description:   Client-side documentation text for Hypre.GMRES
C       
C       WARNING: Automatically generated; changes will be lost
C       
C       babel-version = 0.8.0
C       source-line   = 466
C       source-url    = file:/home/painter/linear_solvers/babel/Interfaces.idl
C       

        THIS FILE IS DOCUMENTATION - DO NOT COMPILE IT!

C       
C       Symbol "Hypre.GMRES" (version 0.1.6)
C       




C       
C       Create an instance of class Hypre.GMRES
C       

        subroutine Hypre_GMRES__create_f(retval)
        implicit none
C       out Hypre.GMRES retval
        integer*8 retval
        end


C       
C       Cast method for interface and class type conversions.
C       

        subroutine Hypre_GMRES__cast_f(self, name, retval)
        implicit none
C       in Hypre.GMRES self
        integer*8 self
C       in string name
        character*(*) name
C       out opaque retval
        integer*8 retval
        end


C       
C       <p>
C       Add one to the intrinsic reference count in the underlying object.
C       Object in <code>SIDL</code> have an intrinsic reference count.
C       Objects continue to exist as long as the reference count is
C       positive. Clients should call this method whenever they
C       create another ongoing reference to an object or interface.
C       </p>
C       <p>
C       This does not have a return value because there is no language
C       independent type that can refer to an interface or a
C       class.
C       </p>
C       

        subroutine Hypre_GMRES_addRef_f(self)
        implicit none
C       in Hypre.GMRES self
        integer*8 self
        end


C       
C       Decrease by one the intrinsic reference count in the underlying
C       object, and delete the object if the reference is non-positive.
C       Objects in <code>SIDL</code> have an intrinsic reference count.
C       Clients should call this method whenever they remove a
C       reference to an object or interface.
C       

        subroutine Hypre_GMRES_deleteRef_f(self)
        implicit none
C       in Hypre.GMRES self
        integer*8 self
        end


C       
C       Return true if and only if <code>obj</code> refers to the same
C       object as this object.
C       

        subroutine Hypre_GMRES_isSame_f(self, iobj, retval)
        implicit none
C       in Hypre.GMRES self
        integer*8 self
C       in SIDL.BaseInterface iobj
        integer*8 iobj
C       out bool retval
        logical retval
        end


C       
C       Check whether the object can support the specified interface or
C       class.  If the <code>SIDL</code> type name in <code>name</code>
C       is supported, then a reference to that object is returned with the
C       reference count incremented.  The callee will be responsible for
C       calling <code>deleteRef</code> on the returned object.  If
C       the specified type is not supported, then a null reference is
C       returned.
C       

        subroutine Hypre_GMRES_queryInt_f(self, name, retval)
        implicit none
C       in Hypre.GMRES self
        integer*8 self
C       in string name
        character*(*) name
C       out SIDL.BaseInterface retval
        integer*8 retval
        end


C       
C       Return whether this object is an instance of the specified type.
C       The string name must be the <code>SIDL</code> type name.  This
C       routine will return <code>true</code> if and only if a cast to
C       the string type name would succeed.
C       

        subroutine Hypre_GMRES_isType_f(self, name, retval)
        implicit none
C       in Hypre.GMRES self
        integer*8 self
C       in string name
        character*(*) name
C       out bool retval
        logical retval
        end


C       
C       Return the meta-data about the class implementing this interface.
C       

        subroutine Hypre_GMRES_getClassInfo_f(self, retval)
        implicit none
C       in Hypre.GMRES self
        integer*8 self
C       out SIDL.ClassInfo retval
        integer*8 retval
        end


C       
C       Method:  SetCommunicator[]
C       

        subroutine Hypre_GMRES_SetCommunicator_f(self, comm, retval)
        implicit none
C       in Hypre.GMRES self
        integer*8 self
C       in opaque comm
        integer*8 comm
C       out int retval
        integer*4 retval
        end


C       
C       Method:  GetDoubleValue[]
C       

        subroutine Hypre_GMRES_GetDoubleValue_f(self, name, value,
     &     retval)
        implicit none
C       in Hypre.GMRES self
        integer*8 self
C       in string name
        character*(*) name
C       out double value
        double precision value
C       out int retval
        integer*4 retval
        end


C       
C       Method:  GetIntValue[]
C       

        subroutine Hypre_GMRES_GetIntValue_f(self, name, value, retval)
        implicit none
C       in Hypre.GMRES self
        integer*8 self
C       in string name
        character*(*) name
C       out int value
        integer*4 value
C       out int retval
        integer*4 retval
        end


C       
C       Method:  SetDoubleParameter[]
C       

        subroutine Hypre_GMRES_SetDoubleParameter_f(self, name, value,
     &     retval)
        implicit none
C       in Hypre.GMRES self
        integer*8 self
C       in string name
        character*(*) name
C       in double value
        double precision value
C       out int retval
        integer*4 retval
        end


C       
C       Method:  SetIntParameter[]
C       

        subroutine Hypre_GMRES_SetIntParameter_f(self, name, value,
     &     retval)
        implicit none
C       in Hypre.GMRES self
        integer*8 self
C       in string name
        character*(*) name
C       in int value
        integer*4 value
C       out int retval
        integer*4 retval
        end


C       
C       Method:  SetStringParameter[]
C       

        subroutine Hypre_GMRES_SetStringParameter_f(self, name, value,
     &     retval)
        implicit none
C       in Hypre.GMRES self
        integer*8 self
C       in string name
        character*(*) name
C       in string value
        character*(*) value
C       out int retval
        integer*4 retval
        end


C       
C       Method:  SetIntArrayParameter[]
C       

        subroutine Hypre_GMRES_SetIntArrayParameter_f(self, name, value,
     &     retval)
        implicit none
C       in Hypre.GMRES self
        integer*8 self
C       in string name
        character*(*) name
C       in array<int> value
        integer*8 value
C       out int retval
        integer*4 retval
        end


C       
C       Method:  SetDoubleArrayParameter[]
C       

        subroutine Hypre_GMRES_SetDoubleArrayParameter_f(self, name,
     &     value, retval)
        implicit none
C       in Hypre.GMRES self
        integer*8 self
C       in string name
        character*(*) name
C       in array<double> value
        integer*8 value
C       out int retval
        integer*4 retval
        end


C       
C       Method:  Setup[]
C       

        subroutine Hypre_GMRES_Setup_f(self, b, x, retval)
        implicit none
C       in Hypre.GMRES self
        integer*8 self
C       in Hypre.Vector b
        integer*8 b
C       in Hypre.Vector x
        integer*8 x
C       out int retval
        integer*4 retval
        end


C       
C       Method:  Apply[]
C       

        subroutine Hypre_GMRES_Apply_f(self, b, x, retval)
        implicit none
C       in Hypre.GMRES self
        integer*8 self
C       in Hypre.Vector b
        integer*8 b
C       inout Hypre.Vector x
        integer*8 x
C       out int retval
        integer*4 retval
        end


C       
C       Method:  SetOperator[]
C       

        subroutine Hypre_GMRES_SetOperator_f(self, A, retval)
        implicit none
C       in Hypre.GMRES self
        integer*8 self
C       in Hypre.Operator A
        integer*8 A
C       out int retval
        integer*4 retval
        end


C       
C       Method:  GetResidual[]
C       

        subroutine Hypre_GMRES_GetResidual_f(self, r, retval)
        implicit none
C       in Hypre.GMRES self
        integer*8 self
C       out Hypre.Vector r
        integer*8 r
C       out int retval
        integer*4 retval
        end


C       
C       Method:  SetLogging[]
C       

        subroutine Hypre_GMRES_SetLogging_f(self, level, retval)
        implicit none
C       in Hypre.GMRES self
        integer*8 self
C       in int level
        integer*4 level
C       out int retval
        integer*4 retval
        end


C       
C       Method:  SetPrintLevel[]
C       

        subroutine Hypre_GMRES_SetPrintLevel_f(self, level, retval)
        implicit none
C       in Hypre.GMRES self
        integer*8 self
C       in int level
        integer*4 level
C       out int retval
        integer*4 retval
        end


C       
C       Method:  SetPreconditioner[]
C       

        subroutine Hypre_GMRES_SetPreconditioner_f(self, s, retval)
        implicit none
C       in Hypre.GMRES self
        integer*8 self
C       in Hypre.Solver s
        integer*8 s
C       out int retval
        integer*4 retval
        end


C       
C       Method:  GetPreconditionedResidual[]
C       

        subroutine Hypre_GMRES_GetPreconditionedResidual_f(self, r,
     &     retval)
        implicit none
C       in Hypre.GMRES self
        integer*8 self
C       out Hypre.Vector r
        integer*8 r
C       out int retval
        integer*4 retval
        end
