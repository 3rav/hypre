C       
C       File:          Hypre_StructStencil_Impl.f
C       Symbol:        Hypre.StructStencil-v0.1.6
C       Symbol Type:   class
C       Babel Version: 0.8.0
C       SIDL Created:  20030210 16:05:49 PST
C       Generated:     20030210 16:05:56 PST
C       Description:   Client-side documentation text for Hypre.StructStencil
C       
C       WARNING: Automatically generated; changes will be lost
C       
C       babel-version = 0.8.0
C       source-line   = 398
C       source-url    = file:/home/painter/linear_solvers/babel/Interfaces.idl
C       

        THIS FILE IS DOCUMENTATION - DO NOT COMPILE IT!

C       
C       Symbol "Hypre.StructStencil" (version 0.1.6)
C       
C       Define a structured stencil for a structured problem description.
C       More than one implementation is not envisioned, thus the decision has
C       been made to make this a class rather than an interface.
C       




C       
C       Create an instance of class Hypre.StructStencil
C       

        subroutine Hypre_StructStencil__create_f(retval)
        implicit none
C       out Hypre.StructStencil retval
        integer*8 retval
        end


C       
C       Cast method for interface and class type conversions.
C       

        subroutine Hypre_StructStencil__cast_f(self, name, retval)
        implicit none
C       in Hypre.StructStencil self
        integer*8 self
C       in string name
        character*(*) name
C       out opaque retval
        integer*8 retval
        end


C       
C       <p>
C       Add one to the intrinsic reference count in the underlying object.
C       Object in <code>SIDL</code> have an intrinsic reference count.
C       Objects continue to exist as long as the reference count is
C       positive. Clients should call this method whenever they
C       create another ongoing reference to an object or interface.
C       </p>
C       <p>
C       This does not have a return value because there is no language
C       independent type that can refer to an interface or a
C       class.
C       </p>
C       

        subroutine Hypre_StructStencil_addRef_f(self)
        implicit none
C       in Hypre.StructStencil self
        integer*8 self
        end


C       
C       Decrease by one the intrinsic reference count in the underlying
C       object, and delete the object if the reference is non-positive.
C       Objects in <code>SIDL</code> have an intrinsic reference count.
C       Clients should call this method whenever they remove a
C       reference to an object or interface.
C       

        subroutine Hypre_StructStencil_deleteRef_f(self)
        implicit none
C       in Hypre.StructStencil self
        integer*8 self
        end


C       
C       Return true if and only if <code>obj</code> refers to the same
C       object as this object.
C       

        subroutine Hypre_StructStencil_isSame_f(self, iobj, retval)
        implicit none
C       in Hypre.StructStencil self
        integer*8 self
C       in SIDL.BaseInterface iobj
        integer*8 iobj
C       out bool retval
        logical retval
        end


C       
C       Check whether the object can support the specified interface or
C       class.  If the <code>SIDL</code> type name in <code>name</code>
C       is supported, then a reference to that object is returned with the
C       reference count incremented.  The callee will be responsible for
C       calling <code>deleteRef</code> on the returned object.  If
C       the specified type is not supported, then a null reference is
C       returned.
C       

        subroutine Hypre_StructStencil_queryInt_f(self, name, retval)
        implicit none
C       in Hypre.StructStencil self
        integer*8 self
C       in string name
        character*(*) name
C       out SIDL.BaseInterface retval
        integer*8 retval
        end


C       
C       Return whether this object is an instance of the specified type.
C       The string name must be the <code>SIDL</code> type name.  This
C       routine will return <code>true</code> if and only if a cast to
C       the string type name would succeed.
C       

        subroutine Hypre_StructStencil_isType_f(self, name, retval)
        implicit none
C       in Hypre.StructStencil self
        integer*8 self
C       in string name
        character*(*) name
C       out bool retval
        logical retval
        end


C       
C       Return the meta-data about the class implementing this interface.
C       

        subroutine Hypre_StructStencil_getClassInfo_f(self, retval)
        implicit none
C       in Hypre.StructStencil self
        integer*8 self
C       out SIDL.ClassInfo retval
        integer*8 retval
        end


C       
C       Method:  SetDimension[]
C       

        subroutine Hypre_StructStencil_SetDimension_f(self, dim, retval)
        implicit none
C       in Hypre.StructStencil self
        integer*8 self
C       in int dim
        integer*4 dim
C       out int retval
        integer*4 retval
        end


C       
C       Method:  SetSize[]
C       

        subroutine Hypre_StructStencil_SetSize_f(self, size, retval)
        implicit none
C       in Hypre.StructStencil self
        integer*8 self
C       in int size
        integer*4 size
C       out int retval
        integer*4 retval
        end


C       
C       Method:  SetElement[]
C       

        subroutine Hypre_StructStencil_SetElement_f(self, index, offset,
     &     retval)
        implicit none
C       in Hypre.StructStencil self
        integer*8 self
C       in int index
        integer*4 index
C       in array<int> offset
        integer*8 offset
C       out int retval
        integer*4 retval
        end
