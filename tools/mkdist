#!/bin/ksh
#BHEADER***********************************************************************
# (c) 2000   The Regents of the University of California
#
# See the file COPYRIGHT_and_DISCLAIMER for a complete copyright
# notice, contact person, and disclaimer.
#
# $Revision$
#EHEADER***********************************************************************
#
# MaKe hypre DISTribution
# This script is used to create the hypre distributions.
#

help ()
{
  printf "$0: [-help] | [-display] | VersionId\n"
  printf " where:\n"
  printf " -help displays this message.\n"
  printf " -display will report the cvs rtag history.\n"
  printf " VersionId, is the desired version identification\n"
  printf "  (e.g., hypre-VersionId.tar.gz, hypre-1.2.0.tar.gz).\n"
  printf "  By convention, VersionId use the following syntax \"M.mm.rr\".\n"
  printf "  The \"M\" is the major release number, \"mm\" is the minor\n"
  printf "  release number, and the \"rr\" an update number. VersionId\n"
  printf "  is used for the name of the release creation and is used\n"
  printf "  in the tar file name and root directory for the distribution.\n"
  printf "  If VersionId can be mapped into a valid rtag branch from the\n"
  printf "  source repository. It is assumed that the rtag id will follow\n"
  printf "  naming convention, \"VM-nn-rr\", note: the leading (capital)\n"
  printf "  \"V\" and the version number separated with \"-\" replacing\n"
  printf "  the \".\"s. If the VersionId can not be mapped to a current\n"
  printf "  rtag id, then an error message is generated.\n"
  printf "  The version information during the install will be derived\n"
  printf "  from the main trunk archive using the information in the\n"
  printf "  file utilites/HYPRE_utilites.h. Alpha, and Beta releases\n"
  printf "  are denoted by the following sytanx \"VM-nn-rr-a\" for alpha\n"
  printf "  releases, and \"VM-nn-rr-b\" for beta releases.\n"
}

usage ()
{
  printf "usage: $0 VersionId\n"
}

display ()
{
  printf "valid cvs rtags:\n"
  cvs history -T -a | grep linear_solvers
}

#=============================================================================
# Define install permissions:
#   - give everybody read/execute permission
#   - give user/group write permission
#=============================================================================

OldMask=umask
umask 002

#=============================================================================
# Parse arguments
#=============================================================================

case $1 in
    -h|-help) 
        help
        exit;;
    -d|-disp|-display) 
        display
        exit;;
esac

if [ $# -gt 0 ]
then
  VersionId=$1
  RtagVersionId=${VersionId}
else
  usage
  exit
fi

#===========================================================================
# Update the source
#===========================================================================

        # create dist directory
HYPRE_DIR="hypre-${VersionId}"
HYPRE_DIST_INSTALL_DIR=`pwd`"/$HYPRE_DIR"
export HYPRE_DIST_INSTALL_DIR
mkdir -p $HYPRE_DIST_INSTALL_DIR
mkdir $HYPRE_DIST_INSTALL_DIR/src
    

(       # checkout the source from the repository
  cd $HYPRE_DIST_INSTALL_DIR/src
  if [ ! -d "$CVSROOT" ]
  then
    echo "Error: no CVS repository, CVSROOT = $CVSROOT"
    exit
  fi
  cvs export -r ${RtagVersionId} linear_solvers
  if [  $? -ne 0 ]
  then
    echo "Error: Rtag Version=${RtagVersionId} not found in CVS repository"
    display
    exit
  fi
)

Version=`echo ${RtagVersionId}|cut -c2- |sed 's/-/\./g'`
if [  $? -ne 0 ]
then
  echo "Error: CVS repository defective"
  exit
fi
mv $HYPRE_DIR "hypre-${Version}"
HYPRE_DIR="hypre-${Version}"
HYPRE_DIST_INSTALL_DIR=`pwd`"/$HYPRE_DIR"
    
(       # build documentation and install
  cd $HYPRE_DIST_INSTALL_DIR/src/linear_solvers
  ./configure --prefix=$HYPRE_DIST_INSTALL_DIR --with-babel
  (cd docs; make all)
  mkdir $HYPRE_DIST_INSTALL_DIR/docs
  cp -fr HYPRE_usr_manual    $HYPRE_DIST_INSTALL_DIR/docs/.
  cp -f  HYPRE_usr_manual.ps $HYPRE_DIST_INSTALL_DIR/docs/.
  cp -fr HYPRE_ref_manual    $HYPRE_DIST_INSTALL_DIR/docs/.
  cp -f  HYPRE_ref_manual.ps $HYPRE_DIST_INSTALL_DIR/docs/.
  cp -fr bHYPRE_ref_manual    $HYPRE_DIST_INSTALL_DIR/docs/.
  cp -f  bHYPRE_ref_manual.ps $HYPRE_DIST_INSTALL_DIR/docs/.
  cd $HYPRE_DIST_INSTALL_DIR/src/linear_solvers
  (cd docs; make distclean)
)
    
(       # store version info
  cd $HYPRE_DIST_INSTALL_DIR
  cp src/linear_solvers/COPYRIGHT_and_DISCLAIMER .
  cp src/linear_solvers/CHANGELOG .
  cp src/linear_solvers/INSTALL .
  cp src/linear_solvers/README .
)

# pop 'linear_solvers' directory to 'src'
mv $HYPRE_DIR/src/linear_solvers/* $HYPRE_DIR/src
rmdir $HYPRE_DIR/src/linear_solvers

# create the hypre-${VersionId}.tar file
echo "creating $HYPRE_DIR.tar file ..."
tar cf $HYPRE_DIR.tar \
    $HYPRE_DIR/CHANGELOG \
    $HYPRE_DIR/COPYRIGHT_and_DISCLAIMER \
    $HYPRE_DIR/INSTALL \
    $HYPRE_DIR/README \
    $HYPRE_DIR/src/docs \
    $HYPRE_DIR/src/FEI_mv \
    $HYPRE_DIR/src/HYPRE.h \
    $HYPRE_DIR/src/IJ_mv \
    $HYPRE_DIR/src/Makefile \
    $HYPRE_DIR/src/aclocal.m4 \
    $HYPRE_DIR/src/babel \
    $HYPRE_DIR/src/babel-runtime \
    $HYPRE_DIR/src/blas \
    $HYPRE_DIR/src/config \
    $HYPRE_DIR/src/configure \
    $HYPRE_DIR/src/distributed_ls \
    $HYPRE_DIR/src/distributed_matrix \
    $HYPRE_DIR/src/eigensolvers \
    $HYPRE_DIR/src/krylov \
    $HYPRE_DIR/src/lapack \
    $HYPRE_DIR/src/lib \
    $HYPRE_DIR/src/matrix_matrix \
    $HYPRE_DIR/src/nopoe \
    $HYPRE_DIR/src/parcsr_es \
    $HYPRE_DIR/src/parcsr_ls \
    $HYPRE_DIR/src/parcsr_mv \
    $HYPRE_DIR/src/seq_mv \
    $HYPRE_DIR/src/sstruct_ls \
    $HYPRE_DIR/src/sstruct_mv \
    $HYPRE_DIR/src/struct_ls \
    $HYPRE_DIR/src/struct_mv \
    $HYPRE_DIR/src/tarch \
    $HYPRE_DIR/src/test \
    $HYPRE_DIR/src/utilities

gzip $HYPRE_DIR.tar

