/*BHEADER**********************************************************************
 * (c) 1998   The Regents of the University of California
 *
 * See the file COPYRIGHT_and_DISCLAIMER for a complete copyright
 * notice, contact person, and disclaimer.
 *
 * $Revision$
 *********************************************************************EHEADER*/

#ifndef hypre_AMG_DATA_HEADER
#define hypre_AMG_DATA_HEADER

/*--------------------------------------------------------------------------
 * hypre_AMGData
 *--------------------------------------------------------------------------*/

typedef struct
{
   /* setup params */
   int      max_levels;
   double   strength;       /* value between 0 and 1;
                               specifies strength of connection */
   int      interp_type;    /* interpolation method type */

   /* solve params */
   int      max_iter;
   int      cycle_type;    /* type of cycle to use (e.g., V, W, ...)*/
   double   tol;
   int      zero_guess;
   int      num_pre_relax;
   int      pre_relax_type;
   int     *pre_relax_points
   int      num_post_relax;
   int      post_relax_type;
   int     *post_relax_points

   /* problem data */
   int      num_variables; 
   int      num_unknowns;  
   int      num_points;    
   int     *unknown_array;            
   int     *point_array;            
   int     *variable_array;            

   /* data generated by the setup phase */
   int      num_levels;
   int     *icg;
   int     *ifg;
   hypre_CSRMatrix **A_array;
   hypre_CSRMatrix **P_array;
   hypre_IntVector **IU_array;
   hypre_IntVector **IP_array;
   hypre_IntVector **IV_array;
   hypre_IntVector **ICG_array;    

   /* data generated in the solve phase */
   hypre_Vector *Vtemp;
   double       *vtmp;
   int           cycle_op_count;

} hypre_AMGData;

/*--------------------------------------------------------------------------
 * Accessor functions for the hypre_AMGData structure
 *--------------------------------------------------------------------------*/

/* setup params */
#define hypre_AMGDataMaxLevels(amg_data)    ((amg_data) -> max_levels)
#define hypre_AMGDataStrength(amg_data)     ((amg_data) -> strength)
		  		      
/* solve params */
		  		      
/* problem data */
				      
/* data generated by the setup phase */
				      
/* data generated in the solve phase */

#endif
