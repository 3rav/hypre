#!/bin/sh
#BHEADER***********************************************************************
# (c) 1998   The Regents of the University of California
#
# See the file COPYRIGHT_and_DISCLAIMER for a complete copyright
# notice, contact person, and disclaimer.
#
# $Revision$
#EHEADER***********************************************************************

#==============================================================================
# Environment variables
# NOTE: this should be stripped down to something more minimal
#==============================================================================

CVSROOT=/home/casc/repository
export CVSROOT

PATH=/home/casc/bin:\
/opt/SUNWspro/bin:/usr/ccs/bin:/usr/local/bin:\
/usr/sbin:/usr/bin:/usr/ucb:\
/sbin/bin:\
/usr/local/scripts:\
/usr/local/mpi/mpich/bin
export PATH

#==============================================================================
# Set autotest directory (assumes CASC cluster)
#==============================================================================

HYPRE_AUTOTEST_DIR="/home/casc/software/hypre/autotest"

#=============================================================================
# Check out the repository in the HYPRE_AUTOTEST_DIR directory
#=============================================================================

if [ ! -d "$CVSROOT" ]
then
    echo "Error: no CVS repository, CVSROOT = $CVSROOT"
    exit
fi

cd $HYPRE_AUTOTEST_DIR
rm -fR linear_solvers
cvs -q checkout -P linear_solvers 1> $0.checkout.log 2> $0.checkout.err
echo "dwalker@llnl.gov rfalgout@llnl.gov" > $0.checkout.err.email 

#=============================================================================
# Make libraries and test drivers (using configure)
#=============================================================================

cd $HYPRE_AUTOTEST_DIR/linear_solvers
rm config.cache
./configure  1> $0.configure.log 2> $0.configure.err
echo "dwalker@llnl.gov rfalgout@llnl.gov elliott22@llnl.gov" > $0.configure.err.email 

make veryclean

make struct 1> $0.struct.log 2> $0.struct.err
echo "dwalker@llnl.gov rfalgout@llnl.gov jones97@llnl.gov" > $0.struct.err.email 

make

make parcsr 1> $0.parcsr.log 2> $0.parcsr.err
echo "dwalker@llnl.gov rfalgout@llnl.gov yang11@llnl.gov vhenson@llnl.gov cleary1@llnl.gov mlambert@llnl.gov" > $0.parcsr.err.email 

make pilut 1> $0.ci_struct.log 2> $0.ci_struct.err
echo "dwalker@llnl.gov rfalgout@llnl.gov cleary1@llnl.gov" > $0.ci_struct.err.email 

make seq 1> $0.seq.log 2> $0.seq.err
echo "dwalker@llnl.gov rfalgout@llnl.gov yang11@llnl.gov vhenson@llnl.gov" > $0.seq.err.email 

make beta 1> $0.beta.log 2> $0.beta.err
echo "dwalker@llnl.gov rfalgout@llnl.gov yang11@llnl.gov vhenson@llnl.gov cleary1@llnl.gov mlambert@llnl.gov" > $0.beta.err.email 


# make documentation
(cd docs; make)

#==============================
# Run test suites
#==============================

cd $HYPRE_AUTOTEST_DIR/linear_solvers/test
./test_drivers.sh -mail

#==============================
# Make C++ test drivers
#==============================

cd $HYPRE_AUTOTEST_DIR/linear_solvers/test
make all++ 1> $0.all++.log 2> $0.all++.err
echo "dwalker@llnl.gov rfalgout@llnl.gov" > $0.all++.err.email 
cd $HYPRE_AUTOTEST_DIR/linear_solvers/test
make beta++ 1> $0.beta++.log 2> $0.beta++.err
echo "dwalker@llnl.gov rfalgout@llnl.gov" > $0.beta++.err.email 

#==============================
# Run test suites
#==============================

#cd $HYPRE_AUTOTEST_DIR/linear_solvers/test
#./test_drivers.sh -mail

#==============================
# Make F77 test drivers
#==============================

cd $HYPRE_AUTOTEST_DIR/linear_solvers/test
make all77 1> $0.all77.log 2> $0.all77.err
echo "dwalker@llnl.gov rfalgout@llnl.gov baldwin5@llnl.gov" > $0.all77.err.email 
cd $HYPRE_AUTOTEST_DIR/linear_solvers/test
make beta77 1> $0.beta77.log 2> $0.beta77.err
echo "dwalker@llnl.gov rfalgout@llnl.gov baldwin5@llnl.gov" > $0.beta77.err.email 

#==============================
# Run test suites
#==============================

#cd $HYPRE_AUTOTEST_DIR/linear_solvers/test
#./test_drivers.sh -mail

#=============================================================================
# Make libraries and test drivers (using configure--with-pthreads)
#=============================================================================

cd $HYPRE_AUTOTEST_DIR/linear_solvers
rm config.cache
./configure  --with-pthreads 1> $0.configure_threads.log 2> $0.configure_threads.err
echo "dwalker@llnl.gov rfalgout@llnl.gov elliott22@llnl.gov" > $0.configure_threads.err.email 

make veryclean

make struct 1> $0.struct_threads.log 2> $0.struct_threads.err
echo "dwalker@llnl.gov rfalgout@llnl.gov jones97@llnl.gov elliott22@llnl.gov" > $0.struct_threads.err.email 

make

make parcsr 1> $0.parcsr_threads.log 2> $0.parcsr_threads.err
echo "dwalker@llnl.gov rfalgout@llnl.gov yang11@llnl.gov vhenson@llnl.gov cleary1@llnl.gov mlambert@llnl.gov" > $0.parcsr_threads.err.email 

make pilut 1> $0.ci_struct_threads.log 2> $0.ci_struct_threads.err
echo "dwalker@llnl.gov rfalgout@llnl.gov cleary1@llnl.gov" > $0.ci_struct_threads.err.email 

make seq 1> $0.seq_threads.log 2> $0.seq_threads.err
echo "dwalker@llnl.gov rfalgout@llnl.gov yang11@llnl.gov vhenson@llnl.gov" > $0.seq_threads.err.email 

make beta 1> $0.beta_threads.log 2> $0.beta_threads.err
echo "dwalker@llnl.gov rfalgout@llnl.gov yang11@llnl.gov vhenson@llnl.gov cleary1@llnl.gov mlambert@llnl.gov" > $0.beta_threads.err.email 


#==============================
# Run test suites
#==============================

#cd $HYPRE_AUTOTEST_DIR/linear_solvers/test
#./test_drivers.sh -mail

#=============================================================================
# Make libraries and test drivers (using configure --without_MPI)
#=============================================================================

cd $HYPRE_AUTOTEST_DIR/linear_solvers
rm config.cache
./configure  --without-MPI 1> $0.configure_no_mpi.log 2> $0.configure_no_mpi.err
echo "dwalker@llnl.gov rfalgout@llnl.gov elliott22@llnl.gov" > $0.configure_no_mpi.err.email 

make veryclean

make struct 1> $0.struct_no_mpi.log 2> $0.struct_no_mpi.err
echo "dwalker@llnl.gov rfalgout@llnl.gov jones97@llnl.gov" > $0.struct_no_mpi.err.email 

make

make parcsr 1> $0.parcsr_no_mpi.log 2> $0.parcsr_no_mpi.err
echo "dwalker@llnl.gov rfalgout@llnl.gov yang11@llnl.gov vhenson@llnl.gov cleary1@llnl.gov mlambert@llnl.gov" > $0.parcsr_no_mpi.err.email 

make pilut 1> $0.ci_struct_no_mpi.log 2> $0.ci_struct_no_mpi.err
echo "dwalker@llnl.gov rfalgout@llnl.gov cleary1@llnl.gov" > $0.ci_struct_no_mpi.err.email 

make seq 1> $0.seq_no_mpi.log 2> $0.seq_no_mpi.err
echo "dwalker@llnl.gov rfalgout@llnl.gov yang11@llnl.gov vhenson@llnl.gov" > $0.seq_no_mpi.err.email 

make beta 1> $0.beta_no_mpi.log 2> $0.beta_no_mpi.err
echo "dwalker@llnl.gov rfalgout@llnl.gov yang11@llnl.gov vhenson@llnl.gov cleary1@llnl.gov mlambert@llnl.gov" > $0.beta_no_mpi.err.email 


#==============================
# Run test suites
#==============================

#cd $HYPRE_AUTOTEST_DIR/linear_solvers/test
#./test_drivers.sh -mail

#=============================================================================
# Clean up
#=============================================================================

cd $HYPRE_AUTOTEST_DIR/linear_solvers
make veryclean

#==============================================================================
# Set permissions so that all developers can access
#  -- give everyone read and execute permission
#  -- give group write permissions
#==============================================================================

echo "setting permissions...."
chmod -fR a+rX,ug+w $HYPRE_AUTOTEST_DIR

#===========================================================================
# Check for errors and send appropriate email
# NOTE: HYPRE_MAIL must support `-s' subject option
#===========================================================================

HYPRE_MAIL=/usr/ucb/Mail

cd $HYPRE_AUTOTEST_DIR
for i in *.err linear_solvers/*.err linear_solvers/test/*.err
do 
    if [ -s "$i" ] 
    then 
	RECIPIENTS=`cat ${i}.email` 
	${HYPRE_MAIL} -s "Autotest error: $i" $RECIPIENTS < $i 
    fi 
done 

#==============================================================================
# Run test suites on remote machines
#==============================================================================

cd $HYPRE_AUTOTEST_DIR

while [ "$*" != "" ]
do

case $1 in
    -dec)
        HYPRE_COMPILE_MACHINE="west"
        HYPRE_RUN_MACHINE="southeast"
        HYPRE_REMOTE_DIR="/usr/apps/hypre/AUTOTEST"
        shift;;
    -blue)
        HYPRE_COMPILE_MACHINE="blue"
        HYPRE_RUN_MACHINE="blue"
        HYPRE_REMOTE_DIR="/usr/apps/hypre/AUTOTEST"
        shift;;
    -red)
        HYPRE_COMPILE_MACHINE="sasn100"
        HYPRE_RUN_MACHINE="janus"
        HYPRE_REMOTE_DIR="/usr/apps/hypre/AUTOTEST"
        shift;;
esac

echo ""
echo "======================================================================"
echo "Running tests on $HYPRE_RUN_MACHINE"
echo "======================================================================"
echo ""

echo "creating new AUTOTEST directory...."
ssh ${HYPRE_COMPILE_MACHINE} "\
    (\
        rm -fR ${HYPRE_REMOTE_DIR};\
        mkdir ${HYPRE_REMOTE_DIR}\
    )"

echo "copying new source...."
scp -r linear_solvers ${HYPRE_COMPILE_MACHINE}:${HYPRE_REMOTE_DIR}

# compile
ssh ${HYPRE_COMPILE_MACHINE} "\
    (\
        cd ${HYPRE_REMOTE_DIR}/linear_solvers;\
	setenv PATH /usr/local.aix43/bin:/usr/local/bin:/usr/bin:/usr/sbin:/usr/ucb:/usr/bin/X11:/usr/local/totalview/bin:/usr/local/gnu/bin:/usr/local/scripts:/usr/apps/bin:/g/g19/dwalker:.:/lib:/usr/local/mpi/include:/usr/lpp/ppe.poe/include:/g/g19/dwalker/mkproto:/g/g19/dwalker/mkproto:/usr/bin:/usr/ccs/bin:/usr/bin/X11:/usr/lbin:/usr/local/apps/bin:/usr/local/apps/basis/bin:/usr/local/apps/meshtv/bin:/usr/local/apps/mpi/bin:/usr/local/lib/NCAR/4.0.1/bin:/usr/local/apps/yorick/bin:/usr/local/forge/bin:/usr/local/totalview/bin:/opt/flexlm/bin-totalview:/usr/lib/cmplrs/atom/Atom:/usr/local/bin:/sbin:/usr/sbin:/usr/local/DX/3.1.4/bin:/usr/local/parasoft/bin.alpha4:/lib:/usr/kits/GKR620/usr/shlib:/usr/include:/usr/lib:/usr/local/apps/cog:/usr/local/parasoft/bin.alpha4:/usr/include:.:/lib:/usr/kits/GKR620/usr/shlib:/usr/include:/usr/lib:/usr/local/apps/cog:/usr/local/parasoft/bin.alpha4:/usr/include;\
	setenv MP_RMPOOL 0;\
	setenv MP_CPU_USE unique;\
	setenv MP_EUIDEVICE css0;\
	setenv MP_EUILIB us;\
	setenv MP_RESD yes;\
	setenv MP_HOSTFILE NULL;\
	setenv MP_LABELIO yes;\
	setenv MP_INFOLEVEL 1;\
	setenv MP_TMPDIR /var/tmp;\
	setenv MP_NOPOECFG YES
	setenv MP_REMOTEDIR /admin/scripts/mpautofix;\
        ./configure ;\
        make beta;\
    )"

# run test suite
ssh ${HYPRE_RUN_MACHINE} "\
    (\
        cd ${HYPRE_REMOTE_DIR}/linear_solvers/test;\
        ./test_drivers.sh -mail\
    )"

ssh ${HYPRE_COMPILE_MACHINE} "\
    (\
	setenv PATH /usr/local.aix43/bin:/usr/local/bin:/usr/bin:/usr/sbin:/usr/ucb:/usr/bin/X11:/usr/local/totalview/bin:/usr/local/gnu/bin:/usr/local/scripts:/usr/apps/bin:/g/g19/dwalker:.:/lib:/usr/local/mpi/include:/usr/lpp/ppe.poe/include:/g/g19/dwalker/mkproto:/g/g19/dwalker/mkproto:/usr/bin:/usr/ccs/bin:/usr/bin/X11:/usr/lbin:/usr/local/apps/bin:/usr/local/apps/basis/bin:/usr/local/apps/meshtv/bin:/usr/local/apps/mpi/bin:/usr/local/lib/NCAR/4.0.1/bin:/usr/local/apps/yorick/bin:/usr/local/forge/bin:/usr/local/totalview/bin:/opt/flexlm/bin-totalview:/usr/lib/cmplrs/atom/Atom:/usr/local/bin:/sbin:/usr/sbin:/usr/local/DX/3.1.4/bin:/usr/local/parasoft/bin.alpha4:/lib:/usr/kits/GKR620/usr/shlib:/usr/include:/usr/lib:/usr/local/apps/cog:/usr/local/parasoft/bin.alpha4:/usr/include:.:/lib:/usr/kits/GKR620/usr/shlib:/usr/include:/usr/lib:/usr/local/apps/cog:/usr/local/parasoft/bin.alpha4:/usr/include;\
	setenv MP_RMPOOL 0;\
	setenv MP_CPU_USE unique;\
	setenv MP_EUIDEVICE css0;\
	setenv MP_EUILIB us;\
	setenv MP_RESD yes;\
	setenv MP_HOSTFILE NULL;\
	setenv MP_LABELIO yes;\
	setenv MP_INFOLEVEL 1;\
	setenv MP_TMPDIR /var/tmp;\
	setenv MP_NOPOECFG YES
	setenv MP_REMOTEDIR /admin/scripts/mpautofix;\
        cd ${HYPRE_REMOTE_DIR}/linear_solvers;\
        ./configure --with-openmp;\
	make veryclean;\
        make beta;\
    )"


echo "cleaning up...."
ssh ${HYPRE_COMPILE_MACHINE} "\
    (\
         cd  ${HYPRE_REMOTE_DIR}/linear_solvers;\
         tar -cvf autotest.${HYPRE_RUN_MACHINE}.tar test\
    )"

echo "copying test results to CASC machine..."
scp -r  ${HYPRE_COMPILE_MACHINE}:${HYPRE_REMOTE_DIR}/linear_solvers/autotest.${HYPRE_RUN_MACHINE}.tar $HYPRE_AUTOTEST_DIR/.

ssh ${HYPRE_COMPILE_MACHINE} "\
    (\
         rm -fR ${HYPRE_REMOTE_DIR}\
    )"

done
