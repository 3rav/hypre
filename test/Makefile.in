# Makefile.in generated by automake 1.8.2 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#
# Makefile.am --- automake input file for Hypre test drivers
#
SOURCES = $(f77_ij_SOURCES) $(f77_ij_b_SOURCES) $(f77_ij_mv_SOURCES) $(f77_struct_SOURCES) $(fei_SOURCES) $(ij_SOURCES) $(nodist_ij_C___SOURCES) $(ij_b_SOURCES) $(ij_mv_SOURCES) $(nodist_ij_mv_C___SOURCES) $(new_ij_SOURCES) $(nodist_new_ij_C___SOURCES) $(sstruct_SOURCES) $(nodist_sstruct_C___SOURCES) $(struct_SOURCES) $(nodist_struct_C___SOURCES)

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = @host@
EXTRA_PROGRAMS = ij$(EXEEXT) ij_mv$(EXEEXT) new_ij$(EXEEXT) \
	sstruct$(EXEEXT) struct$(EXEEXT) f77_ij$(EXEEXT) \
	f77_ij_b$(EXEEXT) f77_ij_mv$(EXEEXT) f77_struct$(EXEEXT) \
	fei$(EXEEXT) ij_b$(EXEEXT) ij.C++$(EXEEXT) new_ij.C++$(EXEEXT) \
	ij_mv.C++$(EXEEXT) struct.C++$(EXEEXT) sstruct.C++$(EXEEXT)
subdir = test
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/acinclude.m4 \
	$(top_srcdir)/config/acx_blas.m4 \
	$(top_srcdir)/config/acx_lapack.m4 \
	$(top_srcdir)/config/acx_misc.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/HYPRE_config.h
CONFIG_CLEAN_FILES =
am_f77_ij_OBJECTS = f77_ij-f77_ij.$(OBJEXT)
f77_ij_OBJECTS = $(am_f77_ij_OBJECTS)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
f77_ij_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_f77_ij_b_OBJECTS = f77_ij_b-f77_ij_b.$(OBJEXT)
f77_ij_b_OBJECTS = $(am_f77_ij_b_OBJECTS)
f77_ij_b_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_f77_ij_mv_OBJECTS = f77_ij_mv-f77_ij_mv.$(OBJEXT)
f77_ij_mv_OBJECTS = $(am_f77_ij_mv_OBJECTS)
am__DEPENDENCIES_3 = $(am__DEPENDENCIES_2)
f77_ij_mv_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_f77_struct_OBJECTS = f77_struct-f77_struct.$(OBJEXT)
f77_struct_OBJECTS = $(am_f77_struct_OBJECTS)
am__DEPENDENCIES_4 = $(am__DEPENDENCIES_1)
f77_struct_DEPENDENCIES = $(am__DEPENDENCIES_4)
am_fei_OBJECTS = fei-fei.$(OBJEXT)
fei_OBJECTS = $(am_fei_OBJECTS)
fei_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_ij_OBJECTS = ij.$(OBJEXT)
ij_OBJECTS = $(am_ij_OBJECTS)
ij_DEPENDENCIES = $(am__DEPENDENCIES_2)
nodist_ij_C___OBJECTS = ij_C__-ij.C++.$(OBJEXT)
ij_C___OBJECTS = $(nodist_ij_C___OBJECTS)
ij_C___DEPENDENCIES = $(am__DEPENDENCIES_2)
am_ij_b_OBJECTS = ij_b-ij_b.$(OBJEXT)
ij_b_OBJECTS = $(am_ij_b_OBJECTS)
ij_b_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_ij_mv_OBJECTS = ij_mv-ij_mv.$(OBJEXT)
ij_mv_OBJECTS = $(am_ij_mv_OBJECTS)
ij_mv_DEPENDENCIES = $(am__DEPENDENCIES_3)
nodist_ij_mv_C___OBJECTS = ij_mv_C__-ij_mv.C++.$(OBJEXT)
ij_mv_C___OBJECTS = $(nodist_ij_mv_C___OBJECTS)
ij_mv_C___DEPENDENCIES = $(am__DEPENDENCIES_3)
am_new_ij_OBJECTS = new_ij-new_ij.$(OBJEXT)
new_ij_OBJECTS = $(am_new_ij_OBJECTS)
new_ij_DEPENDENCIES = $(am__DEPENDENCIES_2)
nodist_new_ij_C___OBJECTS = new_ij_C__-new_ij.C++.$(OBJEXT)
new_ij_C___OBJECTS = $(nodist_new_ij_C___OBJECTS)
new_ij_C___DEPENDENCIES = $(am__DEPENDENCIES_2)
am_sstruct_OBJECTS = sstruct-sstruct.$(OBJEXT)
sstruct_OBJECTS = $(am_sstruct_OBJECTS)
sstruct_DEPENDENCIES = $(am__DEPENDENCIES_2)
nodist_sstruct_C___OBJECTS = sstruct_C__-sstruct.C++.$(OBJEXT)
sstruct_C___OBJECTS = $(nodist_sstruct_C___OBJECTS)
sstruct_C___DEPENDENCIES = $(am__DEPENDENCIES_2)
am_struct_OBJECTS = struct-struct.$(OBJEXT)
struct_OBJECTS = $(am_struct_OBJECTS)
struct_DEPENDENCIES = $(am__DEPENDENCIES_4)
nodist_struct_C___OBJECTS = struct_C__-struct.C++.$(OBJEXT)
struct_C___OBJECTS = $(nodist_struct_C___OBJECTS)
struct_C___DEPENDENCIES = $(am__DEPENDENCIES_4)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp =
am__depfiles_maybe =
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
F77COMPILE = $(F77) $(AM_FFLAGS) $(FFLAGS)
LTF77COMPILE = $(LIBTOOL) --mode=compile $(F77) $(AM_FFLAGS) $(FFLAGS)
F77LD = $(F77)
F77LINK = $(LIBTOOL) --mode=link $(F77LD) $(AM_FFLAGS) $(FFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(f77_ij_SOURCES) $(f77_ij_b_SOURCES) $(f77_ij_mv_SOURCES) \
	$(f77_struct_SOURCES) $(fei_SOURCES) $(ij_SOURCES) \
	$(nodist_ij_C___SOURCES) $(ij_b_SOURCES) $(ij_mv_SOURCES) \
	$(nodist_ij_mv_C___SOURCES) $(new_ij_SOURCES) \
	$(nodist_new_ij_C___SOURCES) $(sstruct_SOURCES) \
	$(nodist_sstruct_C___SOURCES) $(struct_SOURCES) \
	$(nodist_struct_C___SOURCES)
DIST_SOURCES = $(f77_ij_SOURCES) $(f77_ij_b_SOURCES) \
	$(f77_ij_mv_SOURCES) $(f77_struct_SOURCES) $(fei_SOURCES) \
	$(ij_SOURCES) $(ij_b_SOURCES) $(ij_mv_SOURCES) \
	$(new_ij_SOURCES) $(sstruct_SOURCES) $(struct_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BABELDIR = @BABELDIR@
BABELLIBFLAGS = @BABELLIBFLAGS@
BABEL_DIR = @BABEL_DIR@
BABEL_HYPRE_INCLUDES = @BABEL_HYPRE_INCLUDES@
BLASLIBFLAGS = @BLASLIBFLAGS@
BLASNEEDED_FALSE = @BLASNEEDED_FALSE@
BLASNEEDED_TRUE = @BLASNEEDED_TRUE@
BLAS_LIBS = @BLAS_LIBS@
CC = @CC@
CCLD = @CCLD@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXFLAGS = @CXXFLAGS@
CXXLD = @CXXLD@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DLLTOOL = @DLLTOOL@
DOCSDIR_FALSE = @DOCSDIR_FALSE@
DOCSDIR_TRUE = @DOCSDIR_TRUE@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FEI_BASE_DIR = @FEI_BASE_DIR@
FEI_INC_DIR = @FEI_INC_DIR@
FEI_LIB_DIR = @FEI_LIB_DIR@
FFLAGS = @FFLAGS@
FLIBS = @FLIBS@
HYPRE_BABELLIBDIR = @HYPRE_BABELLIBDIR@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LAPACKLIBFLAGS = @LAPACKLIBFLAGS@
LAPACKNEEDED_FALSE = @LAPACKNEEDED_FALSE@
LAPACKNEEDED_TRUE = @LAPACKNEEDED_TRUE@
LAPACK_LIBS = @LAPACK_LIBS@
LDFLAGS = @LDFLAGS@
LIBDIRNEEDED_FALSE = @LIBDIRNEEDED_FALSE@
LIBDIRNEEDED_TRUE = @LIBDIRNEEDED_TRUE@
LIBM = @LIBM@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBTOOL_DEPS = @LIBTOOL_DEPS@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
MLIINCLUDE = @MLIINCLUDE@
MLILIBDIRS = @MLILIBDIRS@
MLILIBS = @MLILIBS@
MLI_DIR = @MLI_DIR@
MPILIBS = @MPILIBS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_DATETIME = @PACKAGE_DATETIME@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
POW_LIB = @POW_LIB@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STATICONLY_FALSE = @STATICONLY_FALSE@
STATICONLY_TRUE = @STATICONLY_TRUE@
STRIP = @STRIP@
TOOLSDIR_FALSE = @TOOLSDIR_FALSE@
TOOLSDIR_TRUE = @TOOLSDIR_TRUE@
USE_FEI_BASE_DIR_DEFAULT_FALSE = @USE_FEI_BASE_DIR_DEFAULT_FALSE@
USE_FEI_BASE_DIR_DEFAULT_TRUE = @USE_FEI_BASE_DIR_DEFAULT_TRUE@
USE_FEI_INC_DIR_DEFAULT_FALSE = @USE_FEI_INC_DIR_DEFAULT_FALSE@
USE_FEI_INC_DIR_DEFAULT_TRUE = @USE_FEI_INC_DIR_DEFAULT_TRUE@
USE_FEI_LIB_DIR_DEFAULT_FALSE = @USE_FEI_LIB_DIR_DEFAULT_FALSE@
USE_FEI_LIB_DIR_DEFAULT_TRUE = @USE_FEI_LIB_DIR_DEFAULT_TRUE@
VERSION = @VERSION@
ac_ct_AR = @ac_ct_AR@
ac_ct_AS = @ac_ct_AS@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DLLTOOL = @ac_ct_DLLTOOL@
ac_ct_F77 = @ac_ct_F77@
ac_ct_OBJDUMP = @ac_ct_OBJDUMP@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__leading_dot = @am__leading_dot@
babeldir = @babeldir@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target_alias = @target_alias@

# hopefully these will be auto-generated with >automake-1.8.0
abs_top_srcdir = @abs_top_srcdir@
abs_srcdir = @abs_srcdir@
abs_builddir = @abs_builddir@
EXTRA_bindir = $(bindir)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
SUBDIRS = \
 .\
 AUTOTEST\
 TEST_fei\
 TEST_ij\
 TEST_sstruct\
 TEST_struct\
 TEST_timing

# f77_struct_b\
# struct_b

# default preprocessor flags for C, C++, and Fortran
AM_CPPFLAGS = \
 -DHYPRE_TIMING\
 -I$(includedir)

AM_CXXFLAGS = -DMPICH_SKIP_MPICXX $(AM_CPPFLAGS)
AM_FFLAGS = \
 -I$(includedir)

EXTRA_DIST = \
 runtest.sh


# ij, build 
ij_SOURCES = ij.c
ij_libraries = \
 -L$(libdir)\
 -lHYPRE_parcsr_ls\
 -lHYPRE_DistributedMatrixPilutSolver\
 -lHYPRE_ParaSails\
 -lHYPRE_Euclid\
 -lHYPRE_IJ_mv\
 -lHYPRE_MatrixMatrix\
 -lHYPRE_DistributedMatrix\
 -lHYPRE_parcsr_mv\
 -lHYPRE_seq_mv\
 -lHYPRE_krylov\
 -lHYPRE_utilities\
 $(LAPACKLIBFLAGS)\
 $(BLASLIBFLAGS)\
 $(LIBM)

ij_LDADD = $(ij_libraries)
#ij_LDFLAGS = -static
# ij, dependencies rules needed because automatic dependency checking is off
ij_dependencies = \
 $(includedir)/utilities.h\
 $(includedir)/HYPRE.h\
 $(includedir)/HYPRE_IJ_mv.h\
 $(includedir)/HYPRE_parcsr_mv.h\
 $(includedir)/HYPRE_parcsr_ls.h\
 $(includedir)/parcsr_mv.h\
 $(includedir)/krylov.h


# ij_mv, build
ij_mv_SOURCES = ij_mv.c
ij_mv_CPPFLAGS = $(AM_CPPFLAGS)
ij_mv_libraries = $(ij_libraries)
ij_mv_LDADD = $(ij_mv_libraries)
ij_mv_dependencies = \
 $(includedir)/utilities.h\
 $(includedir)/HYPRE.h\
 $(includedir)/HYPRE_IJ_mv.h\
 $(includedir)/HYPRE_parcsr_mv.h\
 $(includedir)/HYPRE_parcsr_ls.h\
 $(includedir)/parcsr_mv.h\
 $(includedir)/krylov.h


# new_ij, build
new_ij_SOURCES = new_ij.c
new_ij_CPPFLAGS = $(AM_CPPFLAGS)
new_ij_LDADD = $(ij_libraries)

# sstruct, build
sstruct_SOURCES = sstruct.c
sstruct_CPPFLAGS = $(AM_CPPFLAGS)
sstruct_libraries = \
 -L$(libdir)\
 -lHYPRE_sstruct_ls\
 -lHYPRE_sstruct_mv\
 -lHYPRE_struct_ls\
 -lHYPRE_struct_mv\
 -lHYPRE_parcsr_ls\
 -lHYPRE_DistributedMatrixPilutSolver\
 -lHYPRE_ParaSails\
 -lHYPRE_Euclid\
 -lHYPRE_MatrixMatrix\
 -lHYPRE_DistributedMatrix\
 -lHYPRE_IJ_mv\
 -lHYPRE_parcsr_mv\
 -lHYPRE_seq_mv\
 -lHYPRE_krylov\
 -lHYPRE_utilities\
 $(LAPACKLIBFLAGS)\
 $(BLASLIBFLAGS)\
 $(LIBM)

sstruct_LDADD = $(sstruct_libraries)
sstruct_dependencies = \
 $(includedir)/utilities.h\
 $(includedir)/HYPRE_sstruct_ls.h\
 $(includedir)/krylov.h


# struct, build
struct_SOURCES = struct.c
struct_CPPFLAGS = $(AM_CPPFLAGS)
struct_libraries = \
 -L$(libdir)\
 -lHYPRE_struct_ls\
 -lHYPRE_struct_mv\
 -lHYPRE_krylov\
 -lHYPRE_utilities\
 $(LIBM)

struct_LDADD = $(struct_libraries)
struct_dependencies = \
 $(includedir)/utilities.h\
 $(includedir)/HYPRE_struct_ls.h\
 $(includedir)/struct_mv.h\
 $(includedir)/krylov.h


# optiontional target, fei++
# fei
fei_SOURCES = fei.cxx
fei_CXXFLAGS = \
 -DNOFEI\
 -DHYPRE_TIMING\
 -DMPICH_SKIP_MPICXX\
 -I$(includedir)

fei_LDADD = \
 -L$(libdir)\
 -lHYPRE_LSI\
 -lHYPRE_superlu\
 $(LAPACKLIBFLAGS)\
 $(BLASLIBFLAGS)\
 $(LIBM)

#fei_LDFLAGS = -static
fei_dependencies = \
 $(includedir)/utilities.h\
 $(includedir)/HYPRE.h\
 $(includedir)/HYPRE_IJ_mv.h\
 $(includedir)/HYPRE_parcsr_mv.h\
 $(includedir)/HYPRE_parcsr_ls.h\
 $(includedir)/HYPRE_LinSysCore.h


# optiontional targets, all77
# f77_ij
f77_ij_SOURCES = f77_ij.f
f77_ij_FFLAGS = $(AM_FFLAGS)
f77_ij_LDADD = \
 $(ij_libraries)\
 @FLIBS@

#f77_ij_LDFLAGS = -static

# f77_ij_mv
f77_ij_mv_SOURCES = f77_ij_mv.f
f77_ij_mv_FFLAGS = $(AM_FFLAGS)
f77_ij_mv_LDADD = \
 $(ij_mv_libraries)\
 @FLIBS@

#f77_ij_mv_LDFLAGS = -static

# f77_struct
f77_struct_SOURCES = f77_struct.f
f77_struct_FFLAGS = $(AM_FFLAGS)
f77_struct_LDADD = \
 $(struct_libraries)\
 @FLIBS@

#f77_struct_LDFLAGS = -static

# optiontional targets, babel
# ij_b
ij_b_SOURCES = ij_b.c
ij_b_CPPFLAGS = $(AM_CPPFLAGS)
ij_b_LDADD = \
 @BABELLIBFLAGS@\
 $(ij_libraries)

#ij_b_LDFLAGS = -static
ij_b_dependencies = \
 $(ij_dependencies)\
 $(includedir)/bHYPRE.h\
 $(includedir)/bHYPRE_IJParCSRMatrix_Impl.h\
 $(includedir)/bHYPRE_IJParCSRVector_Impl.h\
 $(includedir)/bHYPRE_ParCSRDiagScale_Impl.h


# f77_ij_b
f77_ij_b_SOURCES = f77_ij_b.f
f77_ij_b_FFLAGS = $(AM_FFLAGS)
f77_ij_b_LDADD = \
 @BABELLIBFLAGS@\
 $(ij_libraries)\
 @FLIBS@

#f77_ij_b_LDFLAGS = -static

# struct_b
#EXTRA_struct_b_SOURCES = struct_b.c
#struct_b_CPPFLAGS = $(AM_CPPFLAGS)
#struct_b_LDADD = $(struct_libraries)
#struct_b_dependencies = \
#$(struct_dependencies)\
#$(includedir)/HYPRE_struct_ls.h\
#$(includedir)/Hypre_Box_Stub.h\
#$(includedir)/Hypre_StructStencil_Stub.h\
#$(includedir)/Hypre_StructGrid_Stub.h\
#$(includedir)/Hypre_StructMatrix_Stub.h\
#$(includedir)/Hypre_StructMatrixBuilder_Stub.h\
#$(includedir)/Hypre_StructVector_Stub.h\
#$(includedir)/Hypre_StructVectorBuilder_Stub.h\
#$(includedir)/Hypre_MPI_Com_Stub.h\
#$(includedir)/Hypre_StructJacobi_Stub.h\
#$(includedir)/Hypre_StructSMG_Stub.h\
#$(includedir)/Hypre_PCG_Stub.h

# f77_struct_b
#EXTRA_f77_struct_b_SOURCES = f77_struct_b.f
#f77_struct_b_FFLAGS = $(AM_FFLAGS)
#f77_struct_b_LDADD = \
# $(struct_libraries)\
# @FLIBS@

# optiontional targets, all++
# Note, automake conversion of +, and . to _ 
# sources are temp (no distribute), add to clean-local target
# ij.C++
nodist_ij_C___SOURCES = ij.C++.cxx
ij_C___CXXFLAGS = $(AM_CXXFLAGS)
ij_C___LDADD = $(ij_libraries)

# ij_mv.C++
nodist_ij_mv_C___SOURCES = ij_mv.C++.cxx
ij_mv_C___CXXFLAGS = $(AM_CXXFLAGS)
ij_mv_C___LDADD = $(ij_mv_libraries)

# new_ij.C++
nodist_new_ij_C___SOURCES = new_ij.C++.cxx
new_ij_C___CXXFLAGS = $(default_cxxxlags)
new_ij_C___LDADD = $(ij_libraries)

# sstruct.C++
nodist_sstruct_C___SOURCES = sstruct.C++.cxx
sstruct_C___CXXFLAGS = $(AM_CXXFLAGS)
sstruct_C___LDADD = $(sstruct_libraries)

# struct.C++
nodist_struct_C___SOURCES = struct.C++.cxx
struct_C___CXXFLAGS = $(AM_CXXFLAGS)
struct_C___LDADD = $(struct_libraries)
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .cxx .f .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  --ignore-deps test/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  --ignore-deps test/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
f77_ij$(EXEEXT): $(f77_ij_OBJECTS) $(f77_ij_DEPENDENCIES) 
	@rm -f f77_ij$(EXEEXT)
	$(F77LINK) $(f77_ij_LDFLAGS) $(f77_ij_OBJECTS) $(f77_ij_LDADD) $(LIBS)
f77_ij_b$(EXEEXT): $(f77_ij_b_OBJECTS) $(f77_ij_b_DEPENDENCIES) 
	@rm -f f77_ij_b$(EXEEXT)
	$(F77LINK) $(f77_ij_b_LDFLAGS) $(f77_ij_b_OBJECTS) $(f77_ij_b_LDADD) $(LIBS)
f77_ij_mv$(EXEEXT): $(f77_ij_mv_OBJECTS) $(f77_ij_mv_DEPENDENCIES) 
	@rm -f f77_ij_mv$(EXEEXT)
	$(F77LINK) $(f77_ij_mv_LDFLAGS) $(f77_ij_mv_OBJECTS) $(f77_ij_mv_LDADD) $(LIBS)
f77_struct$(EXEEXT): $(f77_struct_OBJECTS) $(f77_struct_DEPENDENCIES) 
	@rm -f f77_struct$(EXEEXT)
	$(F77LINK) $(f77_struct_LDFLAGS) $(f77_struct_OBJECTS) $(f77_struct_LDADD) $(LIBS)
fei$(EXEEXT): $(fei_OBJECTS) $(fei_DEPENDENCIES) 
	@rm -f fei$(EXEEXT)
	$(CXXLINK) $(fei_LDFLAGS) $(fei_OBJECTS) $(fei_LDADD) $(LIBS)
ij$(EXEEXT): $(ij_OBJECTS) $(ij_DEPENDENCIES) 
	@rm -f ij$(EXEEXT)
	$(LINK) $(ij_LDFLAGS) $(ij_OBJECTS) $(ij_LDADD) $(LIBS)
ij.C++$(EXEEXT): $(ij_C___OBJECTS) $(ij_C___DEPENDENCIES) 
	@rm -f ij.C++$(EXEEXT)
	$(CXXLINK) $(ij_C___LDFLAGS) $(ij_C___OBJECTS) $(ij_C___LDADD) $(LIBS)
ij_b$(EXEEXT): $(ij_b_OBJECTS) $(ij_b_DEPENDENCIES) 
	@rm -f ij_b$(EXEEXT)
	$(LINK) $(ij_b_LDFLAGS) $(ij_b_OBJECTS) $(ij_b_LDADD) $(LIBS)
ij_mv$(EXEEXT): $(ij_mv_OBJECTS) $(ij_mv_DEPENDENCIES) 
	@rm -f ij_mv$(EXEEXT)
	$(LINK) $(ij_mv_LDFLAGS) $(ij_mv_OBJECTS) $(ij_mv_LDADD) $(LIBS)
ij_mv.C++$(EXEEXT): $(ij_mv_C___OBJECTS) $(ij_mv_C___DEPENDENCIES) 
	@rm -f ij_mv.C++$(EXEEXT)
	$(CXXLINK) $(ij_mv_C___LDFLAGS) $(ij_mv_C___OBJECTS) $(ij_mv_C___LDADD) $(LIBS)
new_ij$(EXEEXT): $(new_ij_OBJECTS) $(new_ij_DEPENDENCIES) 
	@rm -f new_ij$(EXEEXT)
	$(LINK) $(new_ij_LDFLAGS) $(new_ij_OBJECTS) $(new_ij_LDADD) $(LIBS)
new_ij.C++$(EXEEXT): $(new_ij_C___OBJECTS) $(new_ij_C___DEPENDENCIES) 
	@rm -f new_ij.C++$(EXEEXT)
	$(CXXLINK) $(new_ij_C___LDFLAGS) $(new_ij_C___OBJECTS) $(new_ij_C___LDADD) $(LIBS)
sstruct$(EXEEXT): $(sstruct_OBJECTS) $(sstruct_DEPENDENCIES) 
	@rm -f sstruct$(EXEEXT)
	$(LINK) $(sstruct_LDFLAGS) $(sstruct_OBJECTS) $(sstruct_LDADD) $(LIBS)
sstruct.C++$(EXEEXT): $(sstruct_C___OBJECTS) $(sstruct_C___DEPENDENCIES) 
	@rm -f sstruct.C++$(EXEEXT)
	$(CXXLINK) $(sstruct_C___LDFLAGS) $(sstruct_C___OBJECTS) $(sstruct_C___LDADD) $(LIBS)
struct$(EXEEXT): $(struct_OBJECTS) $(struct_DEPENDENCIES) 
	@rm -f struct$(EXEEXT)
	$(LINK) $(struct_LDFLAGS) $(struct_OBJECTS) $(struct_LDADD) $(LIBS)
struct.C++$(EXEEXT): $(struct_C___OBJECTS) $(struct_C___DEPENDENCIES) 
	@rm -f struct.C++$(EXEEXT)
	$(CXXLINK) $(struct_C___LDFLAGS) $(struct_C___OBJECTS) $(struct_C___LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.c.o:
	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -c -o $@ $<

ij_b-ij_b.o: ij_b.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ij_b_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ij_b-ij_b.o `test -f 'ij_b.c' || echo '$(srcdir)/'`ij_b.c

ij_b-ij_b.obj: ij_b.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ij_b_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ij_b-ij_b.obj `if test -f 'ij_b.c'; then $(CYGPATH_W) 'ij_b.c'; else $(CYGPATH_W) '$(srcdir)/ij_b.c'; fi`

ij_b-ij_b.lo: ij_b.c
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ij_b_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ij_b-ij_b.lo `test -f 'ij_b.c' || echo '$(srcdir)/'`ij_b.c

ij_mv-ij_mv.o: ij_mv.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ij_mv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ij_mv-ij_mv.o `test -f 'ij_mv.c' || echo '$(srcdir)/'`ij_mv.c

ij_mv-ij_mv.obj: ij_mv.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ij_mv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ij_mv-ij_mv.obj `if test -f 'ij_mv.c'; then $(CYGPATH_W) 'ij_mv.c'; else $(CYGPATH_W) '$(srcdir)/ij_mv.c'; fi`

ij_mv-ij_mv.lo: ij_mv.c
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ij_mv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ij_mv-ij_mv.lo `test -f 'ij_mv.c' || echo '$(srcdir)/'`ij_mv.c

new_ij-new_ij.o: new_ij.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(new_ij_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o new_ij-new_ij.o `test -f 'new_ij.c' || echo '$(srcdir)/'`new_ij.c

new_ij-new_ij.obj: new_ij.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(new_ij_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o new_ij-new_ij.obj `if test -f 'new_ij.c'; then $(CYGPATH_W) 'new_ij.c'; else $(CYGPATH_W) '$(srcdir)/new_ij.c'; fi`

new_ij-new_ij.lo: new_ij.c
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(new_ij_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o new_ij-new_ij.lo `test -f 'new_ij.c' || echo '$(srcdir)/'`new_ij.c

sstruct-sstruct.o: sstruct.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sstruct_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sstruct-sstruct.o `test -f 'sstruct.c' || echo '$(srcdir)/'`sstruct.c

sstruct-sstruct.obj: sstruct.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sstruct_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sstruct-sstruct.obj `if test -f 'sstruct.c'; then $(CYGPATH_W) 'sstruct.c'; else $(CYGPATH_W) '$(srcdir)/sstruct.c'; fi`

sstruct-sstruct.lo: sstruct.c
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sstruct_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sstruct-sstruct.lo `test -f 'sstruct.c' || echo '$(srcdir)/'`sstruct.c

struct-struct.o: struct.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(struct_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o struct-struct.o `test -f 'struct.c' || echo '$(srcdir)/'`struct.c

struct-struct.obj: struct.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(struct_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o struct-struct.obj `if test -f 'struct.c'; then $(CYGPATH_W) 'struct.c'; else $(CYGPATH_W) '$(srcdir)/struct.c'; fi`

struct-struct.lo: struct.c
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(struct_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o struct-struct.lo `test -f 'struct.c' || echo '$(srcdir)/'`struct.c

.cxx.o:
	$(CXXCOMPILE) -c -o $@ $<

.cxx.obj:
	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cxx.lo:
	$(LTCXXCOMPILE) -c -o $@ $<

fei-fei.o: fei.cxx
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fei_CXXFLAGS) $(CXXFLAGS) -c -o fei-fei.o `test -f 'fei.cxx' || echo '$(srcdir)/'`fei.cxx

fei-fei.obj: fei.cxx
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fei_CXXFLAGS) $(CXXFLAGS) -c -o fei-fei.obj `if test -f 'fei.cxx'; then $(CYGPATH_W) 'fei.cxx'; else $(CYGPATH_W) '$(srcdir)/fei.cxx'; fi`

fei-fei.lo: fei.cxx
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fei_CXXFLAGS) $(CXXFLAGS) -c -o fei-fei.lo `test -f 'fei.cxx' || echo '$(srcdir)/'`fei.cxx

ij_C__-ij.C++.o: ij.C++.cxx
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ij_C___CXXFLAGS) $(CXXFLAGS) -c -o ij_C__-ij.C++.o `test -f 'ij.C++.cxx' || echo '$(srcdir)/'`ij.C++.cxx

ij_C__-ij.C++.obj: ij.C++.cxx
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ij_C___CXXFLAGS) $(CXXFLAGS) -c -o ij_C__-ij.C++.obj `if test -f 'ij.C++.cxx'; then $(CYGPATH_W) 'ij.C++.cxx'; else $(CYGPATH_W) '$(srcdir)/ij.C++.cxx'; fi`

ij_C__-ij.C++.lo: ij.C++.cxx
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ij_C___CXXFLAGS) $(CXXFLAGS) -c -o ij_C__-ij.C++.lo `test -f 'ij.C++.cxx' || echo '$(srcdir)/'`ij.C++.cxx

ij_mv_C__-ij_mv.C++.o: ij_mv.C++.cxx
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ij_mv_C___CXXFLAGS) $(CXXFLAGS) -c -o ij_mv_C__-ij_mv.C++.o `test -f 'ij_mv.C++.cxx' || echo '$(srcdir)/'`ij_mv.C++.cxx

ij_mv_C__-ij_mv.C++.obj: ij_mv.C++.cxx
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ij_mv_C___CXXFLAGS) $(CXXFLAGS) -c -o ij_mv_C__-ij_mv.C++.obj `if test -f 'ij_mv.C++.cxx'; then $(CYGPATH_W) 'ij_mv.C++.cxx'; else $(CYGPATH_W) '$(srcdir)/ij_mv.C++.cxx'; fi`

ij_mv_C__-ij_mv.C++.lo: ij_mv.C++.cxx
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ij_mv_C___CXXFLAGS) $(CXXFLAGS) -c -o ij_mv_C__-ij_mv.C++.lo `test -f 'ij_mv.C++.cxx' || echo '$(srcdir)/'`ij_mv.C++.cxx

new_ij_C__-new_ij.C++.o: new_ij.C++.cxx
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(new_ij_C___CXXFLAGS) $(CXXFLAGS) -c -o new_ij_C__-new_ij.C++.o `test -f 'new_ij.C++.cxx' || echo '$(srcdir)/'`new_ij.C++.cxx

new_ij_C__-new_ij.C++.obj: new_ij.C++.cxx
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(new_ij_C___CXXFLAGS) $(CXXFLAGS) -c -o new_ij_C__-new_ij.C++.obj `if test -f 'new_ij.C++.cxx'; then $(CYGPATH_W) 'new_ij.C++.cxx'; else $(CYGPATH_W) '$(srcdir)/new_ij.C++.cxx'; fi`

new_ij_C__-new_ij.C++.lo: new_ij.C++.cxx
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(new_ij_C___CXXFLAGS) $(CXXFLAGS) -c -o new_ij_C__-new_ij.C++.lo `test -f 'new_ij.C++.cxx' || echo '$(srcdir)/'`new_ij.C++.cxx

sstruct_C__-sstruct.C++.o: sstruct.C++.cxx
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sstruct_C___CXXFLAGS) $(CXXFLAGS) -c -o sstruct_C__-sstruct.C++.o `test -f 'sstruct.C++.cxx' || echo '$(srcdir)/'`sstruct.C++.cxx

sstruct_C__-sstruct.C++.obj: sstruct.C++.cxx
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sstruct_C___CXXFLAGS) $(CXXFLAGS) -c -o sstruct_C__-sstruct.C++.obj `if test -f 'sstruct.C++.cxx'; then $(CYGPATH_W) 'sstruct.C++.cxx'; else $(CYGPATH_W) '$(srcdir)/sstruct.C++.cxx'; fi`

sstruct_C__-sstruct.C++.lo: sstruct.C++.cxx
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sstruct_C___CXXFLAGS) $(CXXFLAGS) -c -o sstruct_C__-sstruct.C++.lo `test -f 'sstruct.C++.cxx' || echo '$(srcdir)/'`sstruct.C++.cxx

struct_C__-struct.C++.o: struct.C++.cxx
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(struct_C___CXXFLAGS) $(CXXFLAGS) -c -o struct_C__-struct.C++.o `test -f 'struct.C++.cxx' || echo '$(srcdir)/'`struct.C++.cxx

struct_C__-struct.C++.obj: struct.C++.cxx
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(struct_C___CXXFLAGS) $(CXXFLAGS) -c -o struct_C__-struct.C++.obj `if test -f 'struct.C++.cxx'; then $(CYGPATH_W) 'struct.C++.cxx'; else $(CYGPATH_W) '$(srcdir)/struct.C++.cxx'; fi`

struct_C__-struct.C++.lo: struct.C++.cxx
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(struct_C___CXXFLAGS) $(CXXFLAGS) -c -o struct_C__-struct.C++.lo `test -f 'struct.C++.cxx' || echo '$(srcdir)/'`struct.C++.cxx

.f.o:
	$(F77COMPILE) -c -o $@ $<

.f.obj:
	$(F77COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.f.lo:
	$(LTF77COMPILE) -c -o $@ $<

f77_ij-f77_ij.o: f77_ij.f
	$(F77) $(f77_ij_FFLAGS) $(FFLAGS) -c -o f77_ij-f77_ij.o `test -f 'f77_ij.f' || echo '$(srcdir)/'`f77_ij.f

f77_ij-f77_ij.obj: f77_ij.f
	$(F77) $(f77_ij_FFLAGS) $(FFLAGS) -c -o f77_ij-f77_ij.obj `if test -f 'f77_ij.f'; then $(CYGPATH_W) 'f77_ij.f'; else $(CYGPATH_W) '$(srcdir)/f77_ij.f'; fi`

f77_ij-f77_ij.lo: f77_ij.f
	$(LIBTOOL) --mode=compile $(F77) $(f77_ij_FFLAGS) $(FFLAGS) -c -o f77_ij-f77_ij.lo `test -f 'f77_ij.f' || echo '$(srcdir)/'`f77_ij.f

f77_ij_b-f77_ij_b.o: f77_ij_b.f
	$(F77) $(f77_ij_b_FFLAGS) $(FFLAGS) -c -o f77_ij_b-f77_ij_b.o `test -f 'f77_ij_b.f' || echo '$(srcdir)/'`f77_ij_b.f

f77_ij_b-f77_ij_b.obj: f77_ij_b.f
	$(F77) $(f77_ij_b_FFLAGS) $(FFLAGS) -c -o f77_ij_b-f77_ij_b.obj `if test -f 'f77_ij_b.f'; then $(CYGPATH_W) 'f77_ij_b.f'; else $(CYGPATH_W) '$(srcdir)/f77_ij_b.f'; fi`

f77_ij_b-f77_ij_b.lo: f77_ij_b.f
	$(LIBTOOL) --mode=compile $(F77) $(f77_ij_b_FFLAGS) $(FFLAGS) -c -o f77_ij_b-f77_ij_b.lo `test -f 'f77_ij_b.f' || echo '$(srcdir)/'`f77_ij_b.f

f77_ij_mv-f77_ij_mv.o: f77_ij_mv.f
	$(F77) $(f77_ij_mv_FFLAGS) $(FFLAGS) -c -o f77_ij_mv-f77_ij_mv.o `test -f 'f77_ij_mv.f' || echo '$(srcdir)/'`f77_ij_mv.f

f77_ij_mv-f77_ij_mv.obj: f77_ij_mv.f
	$(F77) $(f77_ij_mv_FFLAGS) $(FFLAGS) -c -o f77_ij_mv-f77_ij_mv.obj `if test -f 'f77_ij_mv.f'; then $(CYGPATH_W) 'f77_ij_mv.f'; else $(CYGPATH_W) '$(srcdir)/f77_ij_mv.f'; fi`

f77_ij_mv-f77_ij_mv.lo: f77_ij_mv.f
	$(LIBTOOL) --mode=compile $(F77) $(f77_ij_mv_FFLAGS) $(FFLAGS) -c -o f77_ij_mv-f77_ij_mv.lo `test -f 'f77_ij_mv.f' || echo '$(srcdir)/'`f77_ij_mv.f

f77_struct-f77_struct.o: f77_struct.f
	$(F77) $(f77_struct_FFLAGS) $(FFLAGS) -c -o f77_struct-f77_struct.o `test -f 'f77_struct.f' || echo '$(srcdir)/'`f77_struct.f

f77_struct-f77_struct.obj: f77_struct.f
	$(F77) $(f77_struct_FFLAGS) $(FFLAGS) -c -o f77_struct-f77_struct.obj `if test -f 'f77_struct.f'; then $(CYGPATH_W) 'f77_struct.f'; else $(CYGPATH_W) '$(srcdir)/f77_struct.f'; fi`

f77_struct-f77_struct.lo: f77_struct.f
	$(LIBTOOL) --mode=compile $(F77) $(f77_struct_FFLAGS) $(FFLAGS) -c -o f77_struct-f77_struct.lo `test -f 'f77_struct.f' || echo '$(srcdir)/'`f77_struct.f

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if (etags --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	else \
	  include_option=--include; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || mkdir "$(distdir)/$$subdir" \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="../$(top_distdir)" \
	        distdir="../$(distdir)/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libtool clean-local mostlyclean-am

distclean: distclean-recursive
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am:

install-exec-am:
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-generic clean-libtool clean-local clean-recursive \
	ctags ctags-recursive distclean distclean-compile \
	distclean-generic distclean-libtool distclean-recursive \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool mostlyclean-recursive \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-info-am


all: ij$(EXEEXT) ij_mv$(EXEEXT) new_ij$(EXEEXT) struct$(EXEEXT) sstruct$(EXEEXT)

fei++: fei$(EXEEXT)

all++: ij.C++$(EXEEXT) ij_mv.C++$(EXEEXT) struct.C++$(EXEEXT) sstruct.C++$(EXEEXT)

all77: f77_ij$(EXEEXT) f77_ij_mv$(EXEEXT) f77_struct$(EXEEXT)

babel: f77_ij_b$(EXEEXT) ij_b$(EXEEXT) # f77_struct_b$(EXEEXT) struct_b$(EXEEXT)

# some simple dependency checking
$(ij_OBJECTS): $(ij_dependencies)
$(ij_mv_OBJECTS): $(ij_mv_dependencies)
$(new_ij_OBJECTS): $(ij_dependencies)
$(sstruct_OBJECTS): $(sstruct_dependencies)
$(struct_OBJECTS): $(struct_dependencies)
$(fei_OBJECTS): $(fei_dependencies)
$(f77_ij_OBJECTS): $(ij_dependencies)
$(f77_ij_mv_OBJECTS): $(ij_mv_dependencies)
$(f77_struct_OBJECTS): $(struct_dependencies)
$(ij_b_OBJECTS): $(ij_b_dependencies)
$(f77_ij_b_OBJECTS): $(ij_b_dependencies)
#$(struct_b_OBJECTS): $(struct_b_dependencies)
#$(f77_struct_b_OBJECTS): $(struct_b_dependencies)
$(ij_C___OBJECTS): $(ij_dependencies)
$(ij_mv_C___OBJECTS): $(ij_mv_dependencies)
$(new_ij_C___OBJECTS): $(ij_dependencies)
$(sstruct_C___OBJECTS): $(sstruct_dependencies)
$(struct_C___OBJECTS): $(struct_dependencies)

# rule to compile C files with C++
ij.C++.cxx:
	cp -f $(srcdir)/ij.c ij.C++.cxx

ij_mv.C++.cxx:
	cp -f $(srcdir)/ij_mv.c ij_mv.C++.cxx

sstruct.C++.cxx:
	cp -f $(srcdir)/sstruct.c sstruct.C++.cxx

struct.C++.cxx:
	cp -f $(srcdir)/struct.c struct.C++.cxx

clean-local:
	@ \
	for i in $(EXTRA_PROGRAMS) *.C++* driver.out.* ; \
	do \
	  if [ -e $$i ] ; \
	  then \
	    rm -f $$i; \
	  fi; \
	done

# install, put programs in to ./TEST_* directories
install-exec-hook: all
	@ \
	for i in fei ij sstruct struct ; \
	do \
	if test -x $$i$(EXEEXT) ; \
	  then \
	    if test -d $(abs_builddir)/TEST_$$i ; \
	    then \
	      echo $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$i$(EXEEXT) $(abs_builddir)/TEST_$$i/$$i$(EXEEXT); \
	      $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$i$(EXEEXT) $(abs_builddir)/TEST_$$i/$$i$(EXEEXT); \
	    fi; \
	  fi; \
	done

uninstall-hook:
	@ \
	for i in fei ij sstruct struct ; \
	do \
	    if test -d $(abs_builddir)/TEST_$$i ; \
	    then \
	      if test -x $(abs_builddir)/TEST_$$i/$$i$(EXEEXT) ; \
	      then \
		rm -f $(abs_builddir)/TEST_$$i/$$i$(EXEEXT); \
	      fi; \
	    fi; \
	done
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
